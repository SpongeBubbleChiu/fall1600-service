# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    allow_origins: ['localhost:8080', '127.0.0.1:8080']
    puppeteer_api: 'http://localhost:9999/render'
    ssr_engine: 'puppeteer'

    web.upload.prefix: 'upload'
    file.store.path: '%kernel.root_dir%/../web/upload'
    file.store.path_level: 3
    file.store.service: 'file_store.local.random'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\EventListener\:
        resource: '../src/EventListener'
        tags:
         - { name: kernel.event_listener, event: kernel.request, priority: 48 }
         - { name: kernel.event_listener, event: kernel.response, priority: 0 }

    server_side_render:
        public: true
        class: App\Service\ServerSideRender
        calls:
            -
                method: injectAllowOrigins
                arguments:
                    - "%allow_origins%"
            -
                method: injectPuppeteerApi
                arguments:
                    - "%puppeteer_api%"

    file_store.local.random:
        public: true
        class: App\FileStore\FileStoreLocalRandom
        arguments:
            $storePath: "%file.store.path%"
            $pathLevel: "%file.store.path_level%"

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
